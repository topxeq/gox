// define a complex anonymous function
// 定义一个复杂的匿名函数
fn(x) {
	return fn(y) {
		x(y)
	}
}(fn(z) {
		println("Hi!", z)
	})("Nice to see you.")

// anonymous function to test variable "count"
// 测试闭包的函数，用于将count进行计算
NewAddFunc = fn() {
	count = 0

	return fn(n) {
		count += n

		return count
	}
}

main {
	
	println("count=", count)

	// 通过闭包操作count，可以发现count是在变化的
	f2 = NewAddFunc()
	
	println(f2(3))
		
	println(f2(5))
	
	println(f2(9))
	
	// should panic here, since count is nil/undefined
	// It also indicates that the global variable "count" is not the same as the "count" variable in the closure
	// 此处程序会崩溃，因为count未经定义
	// 也说明全局变量count与闭包中的count变量并非同一个
	count += 20
	
	println("count=", count)
	
}


