// 导入imagetk包
itk = imagetk.NewImageTK()

// 创建一个绘制上下文环境
p, _ = plot.New()

// 设置图表的抬头标题
p@Title.Text = "Gonum Plot Example"

// 设置图标X、Y坐标的文字
p@X@Label.Text = "X"
p@Y@Label.Text = "Y"

// 创建一组准备绘制的坐标点（4个点）
points = make(plot_plotter.XYs, 4)

// 创建并为第一个点赋值X、Y坐标
tmpXY = new(plot_plotter.XY)
tmpXY.X = 0.0
tmpXY.Y = 0.0

points[0] = *tmpXY

// 采用简便的方法创建第2、3、4个点
points[1] = itk.NewPlotXY(1.0, 1.0)
points[2] = itk.NewPlotXY(2.0, 4.0)
points[3] = itk.NewPlotXY(3.0, 9.0)

// 在图表中加入这些点，并给相应的曲线设定图例的名字
plot_plotutil.AddLinePoints(p, "y = x * x", points)

// 在内存中生成一个基于plot绘制图的图形对象
rgbaT, errT = itk.LoadPlotImage(p, 4*plot_vg.Inch.Points(), 4*plot_vg.Inch.Points())

checkError(errT, nil)

// 将折线图保存为4英寸见方大小的图片points.png，
// 需要确保c:\test目录已经存在
p.Save(4*plot_vg.Inch.Points(), 4*plot_vg.Inch.Points(), `c:\test\points.png`)

onButtonClick = func() {
	exit()
}

textureT = nil

flagT = 0

f = func() {
	if flagT != 0 {
		return
	}

	flagT = 1

	textureT, errT = giu.NewTextureFromRgba(rgbaT)

	if errT != nil {
		plerr(errT)
		return
	}
}

loop = func() {
	go f()

	layoutT = []giu.Widget{
		giu.ImageWithFile(`c:\test\points.png`, 300, 300),
		giu.Custom(func() {
			if textureT != nil {
				giu.Image(textureT, 348, 348).Build()
			}
		}),
		giu.Button("Close", onButtonClick),
	}

	giu.SingleWindow("Plot Diagram", layoutT)
}

mainWindow = giu.NewMasterWindow("Plot Diagram", 400, 750, giu.MasterWindowFlagsNotResizable, nil)

mainWindow.Main(loop)



