appleT = {
	"Type": "apple",
	"Color": "Red",
	"Weight": 10,
	"canEat": true,
	"Ingredients" : [
		{
			"Name": "Protein",
			"Amount": 0.3,
		},
		{
			"Name": "Sugar",
			"Amount": 10.4,
		},
	],
}

pv("appleT")
println("\n---\n")

newJSONT, errT = tk.ToJSON(appleT)

if errT != nil {
	println("failed to generate JSON:", errT)
	return
}

pl("JSON: %v", newJSONT)

println("\n---\n")

nodeT = tk.GetJSONNode(newJSONT, "Color")
pv("nodeT")

println("\n---\n")

node1T = tk.GetJSONNode(newJSONT, "canEat")
pv("node1T")

println("\n---\n")

node2T = tk.GetJSONNodeAny(newJSONT, "Ingredients")
pl("Value type: %v", node2T.ValueType())

println("\n---\n")

pv("node2T")

subNode1T = tk.GetJSONSubNode(node2T, 0, "Name")

println("\n---\n")

pv("subNode1T")

subNode2T = tk.GetJSONNode(newJSONT, "Ingredients", 1, "Amount")

println("\n---\n")
pv("subNode2T")

subNode3T = tk.GetJSONNode(newJSONT, "Ingredients", "*")

println("\n---\n")
pv("subNode3T")

subSubNodeT = tk.GetJSONSubNode(subNode3T[0], "Name")

println("\n---\n")
pv("subSubNodeT")

subNode4T = tk.GetJSONNodeAny(newJSONT, "Ingredients", 3, "Name")

println("\n---\n")
pv("subNode4T")

pl("Value type: %v", subNode4T.ValueType())

pl("Last Error: %v", subNode4T.LastError())